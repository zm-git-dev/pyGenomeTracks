pr:
  autoCancel: true

stages:

- stage: 'test

  jobs:

  - job: 'Linux'
    timeoutInMinutes: 0
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Python37LowMatplotlib:
          python.version: '3.7'
          matplotlib.version: '3.1.1'
        Python37HighMatplotlib:
          python.version: '3.7'
          matplotlib.version: '3.5.1'
        Python38LowMatplotlib:
          python.version: '3.8'
          matplotlib.version: '3.1.1'
        Python38HighMatplotlib:
          python.version: '3.8'
          matplotlib.version: '3.5.1'
        Python39HighMatplotlib:
          python.version: '3.9'
          matplotlib.version: '3.5.1'

    steps:
    - bash: |
        echo "##vso[task.prependpath]$CONDA/bin"
        hash -r
      displayName: Add conda to PATH
    - bash: |
        conda config --set always_yes yes --set changeps1 no
        conda info -a
        cat requirements_CI.txt | awk -v v=$(matplotlib.version) '{if($0~/matplotlib/){$0="matplotlib =="v}; print}' > requirements_CI_updated.txt
        conda create -n pygenometracks --yes -c conda-forge -c bioconda python=$(python.version) mamba
        source activate pygenometracks
        mamba install --yes -c defaults -c conda-forge -c bioconda --file requirements_CI_updated.txt
        python setup.py install
      displayName: installing dependencies
    - script: |
        source activate pygenometracks
        flake8 . --exclude=.venv,.build,build --ignore=E501,F403,E402,F999,F405,E712,W503
      displayName: linting
    - script: |
        source activate pygenometracks
        py.test pygenometracks --doctest-modules -n 4
      displayName: pytest

  - job: 'OSX'
    timeoutInMinutes: 0
    pool:
      vmImage: 'macOS-11'
    strategy:
      matrix:
        Python37LowMatplotlib:
          python.version: '3.7'
          matplotlib.version: '3.1.1'
        Python37HighMatplotlib:
          python.version: '3.7'
          matplotlib.version: '3.5.1'
        Python38LowMatplotlib:
          python.version: '3.8'
          matplotlib.version: '3.1.1'
        Python38HighMatplotlib:
          python.version: '3.8'
          matplotlib.version: '3.5.1'
        Python39HighMatplotlib:
          python.version: '3.9'
          matplotlib.version: '3.5.1'

    steps:
    - bash: |
        echo "##vso[task.prependpath]$CONDA/bin"
        hash -r
      displayName: Add conda to PATH
    # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
    # We need to take ownership if we want to update conda or install packages globally
    - bash: sudo chown -R $USER $CONDA
      displayName: Take ownership of conda installation
    - bash: |
        conda config --set always_yes yes --set changeps1 no
        conda info -a
        cat requirements_CI.txt | awk -v v=$(matplotlib.version) '{if($0~/matplotlib/){$0="matplotlib =="v}; print}' > requirements_CI_updated.txt
        conda create -n pygenometracks --yes -c conda-forge -c bioconda python=$(python.version) mamba
        source activate pygenometracks
        mamba install --yes -c defaults -c conda-forge -c bioconda --file requirements_CI_updated.txt
        python setup.py install
      displayName: installing dependencies
    - script: |
        source activate pygenometracks
        flake8 . --exclude=.venv,.build,build --ignore=E501,F403,E402,F999,F405,E712,W503
      displayName: linting
    - script: |
        source activate pygenometracks
        py.test pygenometracks --doctest-modules -n 4
      displayName: pytest


- stage: 'deploy'
  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/test') }}:
    - stage: Deploy
      dependsOn: [test]
      condition: succeeded()
      jobs:
      - job: testpypi
        pool:
          vmImage: 'Ubuntu-latest'
        container: python:3.8
        steps:
        - script: |
            python setup.py sdist bdist_wheel
            python -m pip install --user --upgrade twine
            python -m twine upload -r testpypi dist/*
          env:
            TWINE_USERNAME: $(TWINE_TEST_USERNAME)
            TWINE_PASSWORD: $(TWINE_TEST_PASSWORD)
          displayName: 'Push to Python Package Index'
